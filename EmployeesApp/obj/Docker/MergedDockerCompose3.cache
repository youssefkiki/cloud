name: dockercompose9490727797147749372
services:
  employeesapp:
    build:
      context: C:\Users\Blu-Ray\source\repos\EmployeesApp
      dockerfile: EmployeesApp/Dockerfile
    container_name: employees-app
    depends_on:
      employeesdb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
      DB_HOST: employeesdb
      DB_MSSQL_SA_PASSWORD: password@12345#
      DB_NAME: EmployeesApp
    image: employeesapp
    networks:
      employeesapp: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 80
      published: "8001"
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\Blu-Ray\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Blu-Ray\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
  employeesdb:
    container_name: app-db
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: password@12345#
    image: mcr.microsoft.com/mssql/server:2019-latest
    networks:
      employeesapp: null
    ports:
    - mode: ingress
      target: 1433
      published: "8002"
      protocol: tcp
networks:
  employeesapp:
    name: dockercompose9490727797147749372_employeesapp